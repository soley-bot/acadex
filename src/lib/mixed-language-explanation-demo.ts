/**
 * Demo for Mixed Language Explanations (English Questions + Khmer Explanations)
 * This shows how the system handles your specific use case
 */

import { MixedLanguageValidator } from './mixed-language-validator'
import { KhmerLanguageValidator } from './khmer-language-support'

export class MixedLanguageExplanationDemo {
  
  /**
   * Demonstrates typical mixed-language explanations from your use case
   */
  static demonstrateTypicalExplanations() {
    console.log('üåê MIXED LANGUAGE EXPLANATION DEMO')
    console.log('English Questions + Khmer Explanations + Mixed Content')
    console.log('=' .repeat(70))
    
    // These are examples of your typical quiz structure
    const typicalQuizExamples = [
      {
        question: "What is the capital of Cambodia?", // English question
        options: ["Phnom Penh", "Siem Reap", "Battambang", "Kampong Cham"],
        answer: "Phnom Penh",
        explanation: "·ûö·û∂·ûá·ûí·û∂·ûì·û∏·ûÄ·ûò·üí·ûñ·ûª·ûá·û∂·ûÇ·û∫ ·ûó·üí·ûì·üÜ·ûñ·üÅ·ûâ (Phnom Penh) ·ûä·üÇ·ûõ·ûá·û∂·ûë·û∏·ûÄ·üí·ûö·ûª·ûÑ·ûí·üÜ·ûî·üÜ·ûï·ûª·ûè ·ûì·û∑·ûÑ·ûá·û∂·ûò·ûá·üí·ûà·ûò·ûé·üí·ûå·ûõ·ûü·üÅ·ûä·üí·ûã·ûÄ·û∑·ûÖ·üí·ûÖ" // Khmer explanation with English in parentheses
      },
      {
        question: "Which language family does Khmer belong to?",
        options: ["Sino-Tibetan", "Austroasiatic", "Tai-Kadai", "Austronesian"],
        answer: "Austroasiatic",
        explanation: "·ûó·û∂·ûü·û∂·ûÅ·üí·ûò·üÇ·ûö·ûá·û∂·ûó·û∂·ûü·û∂·ûÄ·üí·ûì·ûª·ûÑ·ûÇ·üí·ûö·ûΩ·ûü·û∂·ûö Austroasiatic family ·ûä·üÇ·ûõ·ûö·ûΩ·ûò·ûò·û∂·ûì Vietnamese ·ûï·ûÑ·ûä·üÇ·ûö·üî ·ûó·û∂·ûü·û∂·ûì·üÅ·üá·ûò·û∂·ûì·ûî·üí·ûö·ûú·ûè·üí·ûè·û∑·ûä·üè·ûô·ûº·ûö·ûõ·ûÑ·üã" // Mixed Khmer + English terms
      },
      {
        question: "What is the traditional New Year celebration called in Cambodia?",
        options: ["Pchum Ben", "Chaul Chnam Thmey", "Water Festival", "Royal Ploughing"],
        answer: "Chaul Chnam Thmey", 
        explanation: "·ûÖ·ûº·ûõ·ûÜ·üí·ûì·û∂·üÜ·ûê·üí·ûò·û∏ (Chaul Chnam Thmey) ·ûÇ·û∫·ûá·û∂·ûñ·û∑·ûí·û∏·ûî·ûª·ûé·üí·ûô·ûí·üÜ·ûî·üÜ·ûï·ûª·ûè·ûö·ûî·ûü·üã·ûÅ·üí·ûò·üÇ·ûö·üî It's celebrated in April (·ûÅ·üÇ·ûò·üÅ·ûü·û∂) for 3 days" // Heavy mixing
      },
      {
        question: "How many consonants are in the Khmer alphabet?",
        options: ["32", "33", "34", "35"],
        answer: "33",
        explanation: "·û¢·ûÄ·üí·ûü·ûö·ûÅ·üí·ûò·üÇ·ûö·ûò·û∂·ûì·ûñ·üí·ûô·û∂·ûô·ûì·ûá·üí·ûö·ûª·ûõ ·ü£·ü£ ·ûè·ûΩ but in modern usage only 32 are commonly used. ·ûñ·üí·ûô·û∂·ûô·ûì ·üì (·ü£·ü£) ·ûè·üí·ûö·ûº·ûú·ûî·û∂·ûì·ûõ·ûª·ûî·ûÖ·üÅ·ûâ" // Numbers + Khmer + English
      }
    ]
    
    typicalQuizExamples.forEach((example, index) => {
      console.log(`\n--- Example ${index + 1}: ${example.question.substring(0, 40)}... ---`)
      
      // Test the explanation with our mixed language validator
      const validation = MixedLanguageValidator.validateMixedContent(example.explanation)
      const jsonTest = MixedLanguageValidator.testJSONCompatibility(example.explanation)
      
      console.log(`Question: ${example.question}`)
      console.log(`Answer: ${example.answer}`)
      console.log(`Explanation: ${example.explanation}`)
      console.log('\nValidation Results:')
      console.log(`  Valid: ${validation.isValid ? '‚úÖ' : '‚ùå'}`)
      console.log(`  Khmer: ${validation.languageBreakdown.khmerPercentage}%`)
      console.log(`  English: ${validation.languageBreakdown.englishPercentage}%`)
      console.log(`  JSON Safe: ${jsonTest.success ? '‚úÖ' : '‚ùå'}`)
      
      if (!validation.isValid) {
        console.log(`  Issues: ${validation.issues.join(', ')}`)
      }
      
      if (validation.recommendations.length > 0) {
        console.log(`  Recommendations: ${validation.recommendations.join(', ')}`)
      }
      
      if (!jsonTest.success) {
        console.log(`  JSON Error: ${jsonTest.error}`)
      }
    })
    
    return typicalQuizExamples
  }
  
  /**
   * Tests problematic patterns that break JSON in mixed explanations
   */
  static demonstrateProblematicPatterns() {
    console.log('\nüö® PROBLEMATIC PATTERNS IN MIXED EXPLANATIONS')
    console.log('=' .repeat(60))
    
    const problematicExamples = [
      {
        description: 'Unescaped quotes around Khmer text',
        explanation: 'The word "·ûó·û∂·ûü·û∂" means language in Khmer',
        issue: 'Quotes around Khmer text break JSON parsing'
      },
      {
        description: 'Complex Khmer clusters in mixed content',
        explanation: '·ûî·üí·ûö·ûú·ûè·üí·ûè·û∑·ûü·û∂·ûü·üí·ûè·üí·ûö (history) is a complex word with multiple clusters that can break JSON',
        issue: 'Complex consonant clusters in JSON strings'
      },
      {
        description: 'Mixed punctuation systems',
        explanation: '·ûÖ·ûò·üí·ûõ·ûæ·ûô·ûÇ·û∫·üñ A) ·ûó·üí·ûì·üÜ·ûñ·üÅ·ûâ·üî The answer is: A) Phnom Penh.',
        issue: 'Mixed Khmer (·üñ ·üî) and English punctuation'
      },
      {
        description: 'Khmer numerals vs Arabic numerals',
        explanation: '·ûò·û∂·ûì·ûÖ·ûò·üí·ûõ·ûæ·ûô ·ü§ (4) choices ·ûÄ·üí·ûì·ûª·ûÑ·ûü·üÜ·ûé·ûΩ·ûö·ûì·üÅ·üá',
        issue: 'Mixed numeral systems can confuse parsing'
      },
      {
        description: 'Control characters or hidden Unicode',
        explanation: 'Normal text\u200Bwith hidden zero-width space ·ûó·û∂·ûü·û∂·ûÅ·üí·ûò·üÇ·ûö',
        issue: 'Zero-width characters break JSON'
      }
    ]
    
    problematicExamples.forEach((example, index) => {
      console.log(`\n${index + 1}. ${example.description}:`)
      console.log(`   Text: "${example.explanation}"`)
      console.log(`   Issue: ${example.issue}`)
      
      // Test with validators
      const mixedValidation = MixedLanguageValidator.validateMixedContent(example.explanation)
      const jsonTest = MixedLanguageValidator.testJSONCompatibility(example.explanation)
      const sanitized = MixedLanguageValidator.sanitizeMixedContent(example.explanation)
      
      console.log(`   Mixed Validation: ${mixedValidation.isValid ? '‚úÖ' : '‚ùå'}`)
      console.log(`   JSON Test: ${jsonTest.success ? '‚úÖ' : '‚ùå'}`)
      
      if (!mixedValidation.isValid) {
        console.log(`   Issues: ${mixedValidation.issues.join(', ')}`)
      }
      
      if (!jsonTest.success) {
        console.log(`   JSON Error: ${jsonTest.error}`)
      }
      
      console.log(`   Sanitized: "${sanitized}"`)
      
      // Test if sanitized version works
      const sanitizedTest = MixedLanguageValidator.testJSONCompatibility(sanitized)
      console.log(`   Sanitized JSON Test: ${sanitizedTest.success ? '‚úÖ' : '‚ùå'}`)
    })
    
    return problematicExamples
  }
  
  /**
   * Shows how to fix mixed language explanations for safe JSON storage
   */
  static demonstrateFixes() {
    console.log('\nüîß FIXES FOR MIXED LANGUAGE EXPLANATIONS')
    console.log('=' .repeat(55))
    
    const beforeAfterExamples = [
      {
        description: 'Fix quotes around Khmer text',
        before: 'The word "·ûó·û∂·ûü·û∂" means language',
        after: 'The word ·ûó·û∂·ûü·û∂ means language',
        fix: 'Remove quotes around Khmer text or use single quotes'
      },
      {
        description: 'Simplify complex Khmer clusters',
        before: '·ûî·üí·ûö·ûú·ûè·üí·ûè·û∑·ûü·û∂·ûü·üí·ûè·üí·ûö is the Khmer word for history',
        after: '·ûî·üí·ûö·ûú·ûè·üí·ûè·û∑ is the Khmer word for history',
        fix: 'Use simpler Khmer words when possible'
      },
      {
        description: 'Consistent punctuation',
        before: '·ûÖ·ûò·üí·ûõ·ûæ·ûô·ûÇ·û∫·üñ A) ·ûó·üí·ûì·üÜ·ûñ·üÅ·ûâ·üî The answer is: A) Phnom Penh.',
        after: '·ûÖ·ûò·üí·ûõ·ûæ·ûô·ûÇ·û∫ A) ·ûó·üí·ûì·üÜ·ûñ·üÅ·ûâ. The answer is: A) Phnom Penh.',
        fix: 'Use consistent punctuation system'
      },
      {
        description: 'Consistent numbers',
        before: '·ûò·û∂·ûì·ûÖ·ûò·üí·ûõ·ûæ·ûô ·ü§ (4) choices',
        after: '·ûò·û∂·ûì·ûÖ·ûò·üí·ûõ·ûæ·ûô 4 choices',
        fix: 'Use Arabic numerals consistently'
      }
    ]
    
    beforeAfterExamples.forEach((example, index) => {
      console.log(`\n${index + 1}. ${example.description}:`)
      console.log(`   Before: "${example.before}"`)
      console.log(`   After:  "${example.after}"`)
      console.log(`   Fix:    ${example.fix}`)
      
      // Test both versions
      const beforeTest = MixedLanguageValidator.testJSONCompatibility(example.before)
      const afterTest = MixedLanguageValidator.testJSONCompatibility(example.after)
      
      console.log(`   Before JSON: ${beforeTest.success ? '‚úÖ' : '‚ùå'}`)
      console.log(`   After JSON:  ${afterTest.success ? '‚úÖ' : '‚ùå'}`)
      
      if (!beforeTest.success) {
        console.log(`   Before Error: ${beforeTest.error}`)
      }
    })
    
    return beforeAfterExamples
  }
  
  /**
   * Complete demonstration of mixed language handling
   */
  static runCompleteDemo() {
    console.log('\nüéØ COMPLETE MIXED LANGUAGE EXPLANATION DEMO')
    console.log('For English Questions + Khmer Explanations + Mixed Content')
    console.log('=' .repeat(75))
    
    const results = {
      typical: this.demonstrateTypicalExplanations(),
      problematic: this.demonstrateProblematicPatterns(),
      fixes: this.demonstrateFixes()
    }
    
    console.log('\nüìä SUMMARY FOR YOUR USE CASE:')
    console.log('1. English questions with Khmer explanations ARE supported')
    console.log('2. Mixed content (English + Khmer) needs careful validation')
    console.log('3. Avoid quotes around Khmer text in explanations')
    console.log('4. Use consistent punctuation and numbering')
    console.log('5. The system will automatically sanitize problematic content')
    
    console.log('\nüí° RECOMMENDATIONS:')
    console.log('1. Test explanations with MixedLanguageValidator before saving')
    console.log('2. Use Arabic numerals (1,2,3) instead of Khmer numerals')
    console.log('3. Keep English and Khmer sections together, avoid frequent mixing')
    console.log('4. Use : instead of ·üñ for consistency')
    console.log('5. Place English clarifications in parentheses: ·ûó·û∂·ûü·û∂ (language)')
    
    return results
  }
}

export default MixedLanguageExplanationDemo
